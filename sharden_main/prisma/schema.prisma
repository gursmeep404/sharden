generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    Int     @id @default(autoincrement())
  name  String  @unique @db.VarChar(50)
  users Users[]

  @@map("roles")
}

model Users {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String    @unique @db.VarChar(255)
  password_hash String
  name          String?   @db.VarChar(100)
  role_id       Int
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @updatedAt @db.Timestamptz(6)
  role          Role      @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("users")
}

model SecureFile {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  original_filename String
  storage_path      String   @db.Text              // path to encrypted .bin on disk
  mime_type         String?  @db.VarChar(255)
  sender_email      String   @db.VarChar(255)
  recipient_email   String   @db.VarChar(255)
  expiry_time       DateTime @db.Timestamptz(6)
  revoked           Boolean  @default(false)
  e2e               Boolean  @default(false)
  iv_b64            String?  @db.Text             // E2E only
  legacy_key_b64    String?  @db.Text             // legacy server-encrypt only
  encrypted_size    Int?                             // bytes of ciphertext
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  updated_at        DateTime @updatedAt @db.Timestamptz(6)

  logs              FileAuditLog[]

  @@index([sender_email], map: "idx_secure_files_sender")
  @@index([recipient_email], map: "idx_secure_files_recipient")
  @@map("secure_files")
}

model FileAuditLog {
  id        BigInt   @id @default(autoincrement())
  file_id   String?  @db.Uuid
  action    String   @db.VarChar(50)
  status    String   @db.VarChar(20)
  details   String?  @db.Text
  timestamp DateTime @default(now()) @db.Timestamptz(6)

  file      SecureFile? @relation(fields: [file_id], references: [id])

  @@index([file_id], map: "idx_file_audit_log_file")
  @@map("file_audit_log")
}
